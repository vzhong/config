#!/usr/bin/env python
import re
import pwd
import json
from collections import defaultdict
import subprocess


def get_owner(pid):
    UID = 1
    for l in open('/proc/{}/status'.format(pid)):
        if l.startswith('Uid:'):
            uid = int(l.split()[UID])
            return pwd.getpwuid(uid).pw_name


def parse_nvidia_smi(log):
    lines = log.split('\n')

    try:
        split_idx = log.index("| Processes:")
    except ValueError: # Substring not found
        raise ValueError('Invalid nvidia-smi output:\n{}'.format(log))

    gpu_log, usage_log = log[:split_idx], log[split_idx:]
    gpus = [int(i) for i in re.findall("\n\|\s+(\d+)\s", gpu_log)]
    usage = defaultdict(list)

    for line in re.findall("\|\s+(\d.*?)\s\|", usage_log):
        tokens = line.split()
        gpu, pid, proc_type, proc_name, mem = tokens
        owner = get_owner(int(pid))
        usage[owner].append({'gpu': gpu, 'pid': pid, 'type': proc_type, 'name': proc_name, 'mem': mem})

    return usage, gpus


if __name__ == '__main__':
    stdout = subprocess.check_output("nvidia-smi", shell=True)
    usage, gpus = parse_nvidia_smi(stdout.decode('utf-8'))
    print(json.dumps({"usage": usage, "gpus": gpus}, indent=2))
